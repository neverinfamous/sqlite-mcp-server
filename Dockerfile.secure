# Alpine-based Dockerfile for reduced attack surface
FROM python:3.13-alpine

WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    build-base \
    libffi-dev \
    openssl-dev \
    sqlite-dev \
    sqlite \
    && apk upgrade \
    && rm -rf /var/cache/apk/*

# Install uv for faster dependency resolution
RUN pip install --no-cache-dir uv

# Copy project files
COPY requirements.txt requirements-dev.txt pyproject.toml uv.lock ./
COPY src/ ./src/

# Install dependencies using uv
RUN uv sync --frozen --no-dev

# Create non-root user for security
RUN addgroup -g 1000 app && \
    adduser -u 1000 -G app -s /bin/sh -D app

# Create data directory and set permissions
RUN mkdir -p /app/data && chown -R app:app /app

# Switch to non-root user
USER app

# Expose port (if needed for HTTP mode)
EXPOSE 8000

# Use uv to run the application
ENTRYPOINT ["uv", "run", "mcp-server-sqlite"]